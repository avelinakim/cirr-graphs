{"version":3,"sources":["Graph.js","Bootcamps.js","Routes.js","NavBar.js","App.js","serviceWorker.js","index.js"],"names":["schoolsData","name","school","salaryRange","percentage","color","pickColor","datum","rangeIndex","console","log","percent","num","parseInt","amt","Math","round","R","B","G","toString","slice","LightenColor","Graph","className","style","padding","margin","theme","VictoryTheme","material","domainPadding","dependentAxis","tickValues","tickFormat","tick","colorScale","data","x","y","fill","React","Component","bootcamps","id","Bootcamps","props","map","bootcamp","key","type","Routes","path","NavBar","to","App","Grommet","grommet","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.20cd333b.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css'\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryStack } from 'victory'\n\nconst tech = [\n  { salaryRange: [0, 50000], percentage: 18.6 },\n  { salaryRange: [50000, 60000], percentage: 49.2 },\n  { salaryRange: [60000, 70000], percentage: 27.1 },\n  { salaryRange: [70000, 80000], percentage: 3.4 },\n  { salaryRange: [80000, 90000], percentage: 0.0 },\n  { salaryRange: [90000, 150000], percentage: 1.7 },\n]\n\nconst grace = [\n  { salaryRange: [0, 60000], percentage: 10.1 },\n  { salaryRange: [60000, 70000], percentage: 4.3 },\n  { salaryRange: [70000, 80000], percentage: 17.4 },\n  { salaryRange: [80000, 90000], percentage: 13.0 },\n  { salaryRange: [90000, 100000], percentage: 20.3 },\n  { salaryRange: [100000, 150000], percentage: 34.8 },\n]\n\nconst code = [\n  { salaryRange: [0, 100000], percentage: 25.0 },\n  { salaryRange: [100000, 110000], percentage: 3.1 },\n  { salaryRange: [110000, 120000], percentage: 25.0 },\n  { salaryRange: [120000, 130000], percentage: 9.4 },\n  { salaryRange: [130000, 140000], percentage: 12.5 },\n  { salaryRange: [140000, 150000], percentage: 25.0 },\n]\n\nconst schoolsData = [\n  { name: 'code', school: code, color: '118217' },\n  { name: 'tech', school: tech, color: '0914AA' },\n  { name: 'grace', school: grace, color: 'AA0000' },\n]\n\nconst LightenColor = function(color, percent) {\n  const num = parseInt(color, 16)\n  const amt = Math.round(2.55 * percent)\n  const R = (num >> 16) + amt\n  const B = ((num >> 8) & 0x00ff) + amt\n  const G = (num & 0x0000ff) + amt\n\n  return (\n    0x1000000 +\n    (R < 255 ? (R < 1 ? 0 : R) : 255) * 0x10000 +\n    (B < 255 ? (B < 1 ? 0 : B) : 255) * 0x100 +\n    (G < 255 ? (G < 1 ? 0 : G) : 255)\n  )\n    .toString(16)\n    .slice(1)\n}\n\nconst pickColor = function(datum, rangeIndex) {\n  let percentage = datum.school[rangeIndex].percentage\n\n  const color = datum.color\n  if (percentage <= 5) percentage = 80\n  else if (percentage <= 10) percentage = 67\n  else if (percentage <= 15) percentage = 44\n  else if (percentage <= 20 && percentage < 25) percentage = 22\n  else percentage = 1\n\n  console.log('rangeIndex', rangeIndex, 'TCL: pickColor -> percentage', percentage)\n  return LightenColor(color, percentage)\n}\n\nclass Graph extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Victory Tutorial</h1>\n        <div style={{ padding: '50px', margin: '50px' }}>\n          <VictoryChart theme={VictoryTheme.material} domainPadding={30} padding={60}>\n            <VictoryAxis />\n            <VictoryAxis\n              dependentAxis\n              tickValues={[50000, 75000, 100000, 125000, 150000]}\n              tickFormat={(tick) => {\n                return `$${tick}`\n              }}\n            />\n\n            <VictoryStack colorScale=\"heatmap\">\n              <VictoryBar\n                data={schoolsData}\n                x=\"name\"\n                y={(datum) => datum.school[0].salaryRange[1] - datum.school[0].salaryRange[0]}\n                style={{\n                  data: {\n                    fill: ({ datum }) => pickColor(datum, 0),\n                  },\n                }}\n              />\n              <VictoryBar\n                data={schoolsData}\n                x=\"name\"\n                y={(datum) => datum.school[1].salaryRange[1] - datum.school[1].salaryRange[0]}\n                style={{\n                  data: {\n                    fill: ({ datum }) => pickColor(datum, 1),\n                  },\n                }}\n              />\n              <VictoryBar\n                data={schoolsData}\n                x=\"name\"\n                y={(datum) => datum.school[2].salaryRange[1] - datum.school[2].salaryRange[0]}\n                style={{\n                  data: {\n                    fill: ({ datum }) => pickColor(datum, 2),\n                  },\n                }}\n              />\n              <VictoryBar\n                data={schoolsData}\n                x=\"name\"\n                y={(datum) => datum.school[3].salaryRange[1] - datum.school[3].salaryRange[0]}\n                style={{\n                  data: {\n                    fill: ({ datum }) => pickColor(datum, 3),\n                  },\n                }}\n              />\n              <VictoryBar\n                data={schoolsData}\n                x=\"name\"\n                y={(datum) => datum.school[4].salaryRange[1] - datum.school[4].salaryRange[0]}\n                style={{\n                  data: {\n                    fill: ({ datum }) => pickColor(datum, 4),\n                  },\n                }}\n              />\n              <VictoryBar\n                data={schoolsData}\n                x=\"name\"\n                y={(datum) => datum.school[5].salaryRange[1] - datum.school[5].salaryRange[0]}\n                style={{\n                  data: {\n                    fill: ({ datum }) => pickColor(datum, 5),\n                  },\n                }}\n              />\n            </VictoryStack>\n          </VictoryChart>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Graph\n","import React from 'react'\n\nconst bootcamps = [\n  { id: 0, name: 'Bloc Designer Track' },\n  { id: 1, name: 'CodeSmith' },\n  { id: 2, name: 'Fullstack' },\n  { id: 3, name: 'Fullstack Grace Hopper' },\n  { id: 4, name: 'Hack Reactor' },\n]\n\nclass Bootcamps extends React.Component {\n  constructor(props) {\n    super(props)\n  }\n  render() {\n    return (\n      <div className=\"bootcampsList\">\n        <h1> BOOT CAMPS </h1>\n        {bootcamps.map((bootcamp) => {\n          return (\n            <div key={bootcamp.id}>\n              <input type=\"checkbox\"></input>\n              {bootcamp.name}\n            </div>\n          )\n        })}\n        <button>Get Graphs!</button>\n      </div>\n    )\n  }\n}\n\nexport default Bootcamps\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Graph from './Graph'\nimport Bootcamps from './Bootcamps'\n\nconst Routes = (props) => (\n  <Switch>\n    <Route path=\"/graph\">\n      <Graph />\n    </Route>\n    <Route path=\"/\">\n      <Bootcamps />\n    </Route>\n  </Switch>\n)\n\nexport default Routes\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n// import { Box, Grommet, Header, Nav } from 'grommet'\n\nconst NavBar = (props) => (\n  <nav>\n    <Link to=\"/graph\">Graph</Link>\n  </nav>\n)\n\nexport default NavBar\n","import React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Grommet, grommet } from 'grommet'\nimport Routes from './Routes'\nimport NavBar from './NavBar'\n\nconst App = (props) => {\n  return (\n    <Router>\n      <Grommet theme={grommet}>\n        <NavBar />\n        <Routes />\n      </Grommet>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}