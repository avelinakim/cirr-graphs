{"ast":null,"code":"import { normalizeColor } from '../../utils';\nexport var strokeProps = function strokeProps(color, theme) {\n  var result = {};\n\n  if (color) {\n    if (typeof color === 'object') {\n      result.stroke = normalizeColor(color.color, theme);\n\n      if (color.opacity) {\n        result.strokeOpacity = \"\" + (color.opacity === true ? theme.global.opacity.medium : theme.global.opacity[color.opacity]);\n      }\n    } else {\n      result.stroke = normalizeColor(color, theme);\n    }\n  }\n\n  return result;\n};\nvar neutralExp = /^neutral-\\d+/;\nexport var defaultColor = function defaultColor(index, theme, valuesLength) {\n  if (index === valuesLength - 1 && theme.meter.color) {\n    return theme.meter.color;\n  }\n\n  if (theme.meter && theme.meter.colors) {\n    var _colors = theme.meter.colors[theme.dark ? 'dark' : 'light'] || theme.meter.colors;\n\n    return _colors[index % _colors.length];\n  }\n\n  var colors = Object.keys(theme.global.colors).filter(function (n) {\n    return n.match(/^graph-[0-9]$/);\n  });\n\n  if (colors.length > 0) {\n    return colors[index % colors.length];\n  } // Deprecate using \"neutral-*\" color names. Remove eventually.\n\n\n  var neutralColors = Object.keys(theme.global.colors).filter(function (k) {\n    return neutralExp.test(k);\n  });\n  return neutralColors[index % neutralColors.length];\n};","map":{"version":3,"sources":["/Users/Avelina/Projects/senior/cirr-graphs/node_modules/grommet/es6/components/Meter/utils.js"],"names":["normalizeColor","strokeProps","color","theme","result","stroke","opacity","strokeOpacity","global","medium","neutralExp","defaultColor","index","valuesLength","meter","colors","_colors","dark","length","Object","keys","filter","n","match","neutralColors","k","test"],"mappings":"AAAA,SAASA,cAAT,QAA+B,aAA/B;AACA,OAAO,IAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmC;AAC1D,MAAIC,MAAM,GAAG,EAAb;;AAEA,MAAIF,KAAJ,EAAW;AACT,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7BE,MAAAA,MAAM,CAACC,MAAP,GAAgBL,cAAc,CAACE,KAAK,CAACA,KAAP,EAAcC,KAAd,CAA9B;;AAEA,UAAID,KAAK,CAACI,OAAV,EAAmB;AACjBF,QAAAA,MAAM,CAACG,aAAP,GAAuB,MAAML,KAAK,CAACI,OAAN,KAAkB,IAAlB,GAAyBH,KAAK,CAACK,MAAN,CAAaF,OAAb,CAAqBG,MAA9C,GAAuDN,KAAK,CAACK,MAAN,CAAaF,OAAb,CAAqBJ,KAAK,CAACI,OAA3B,CAA7D,CAAvB;AACD;AACF,KAND,MAMO;AACLF,MAAAA,MAAM,CAACC,MAAP,GAAgBL,cAAc,CAACE,KAAD,EAAQC,KAAR,CAA9B;AACD;AACF;;AAED,SAAOC,MAAP;AACD,CAhBM;AAiBP,IAAIM,UAAU,GAAG,cAAjB;AACA,OAAO,IAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,KAAtB,EAA6BT,KAA7B,EAAoCU,YAApC,EAAkD;AAC1E,MAAID,KAAK,KAAKC,YAAY,GAAG,CAAzB,IAA8BV,KAAK,CAACW,KAAN,CAAYZ,KAA9C,EAAqD;AACnD,WAAOC,KAAK,CAACW,KAAN,CAAYZ,KAAnB;AACD;;AAED,MAAIC,KAAK,CAACW,KAAN,IAAeX,KAAK,CAACW,KAAN,CAAYC,MAA/B,EAAuC;AACrC,QAAIC,OAAO,GAAGb,KAAK,CAACW,KAAN,CAAYC,MAAZ,CAAmBZ,KAAK,CAACc,IAAN,GAAa,MAAb,GAAsB,OAAzC,KAAqDd,KAAK,CAACW,KAAN,CAAYC,MAA/E;;AAEA,WAAOC,OAAO,CAACJ,KAAK,GAAGI,OAAO,CAACE,MAAjB,CAAd;AACD;;AAED,MAAIH,MAAM,GAAGI,MAAM,CAACC,IAAP,CAAYjB,KAAK,CAACK,MAAN,CAAaO,MAAzB,EAAiCM,MAAjC,CAAwC,UAAUC,CAAV,EAAa;AAChE,WAAOA,CAAC,CAACC,KAAF,CAAQ,eAAR,CAAP;AACD,GAFY,CAAb;;AAIA,MAAIR,MAAM,CAACG,MAAP,GAAgB,CAApB,EAAuB;AACrB,WAAOH,MAAM,CAACH,KAAK,GAAGG,MAAM,CAACG,MAAhB,CAAb;AACD,GAjByE,CAiBxE;;;AAGF,MAAIM,aAAa,GAAGL,MAAM,CAACC,IAAP,CAAYjB,KAAK,CAACK,MAAN,CAAaO,MAAzB,EAAiCM,MAAjC,CAAwC,UAAUI,CAAV,EAAa;AACvE,WAAOf,UAAU,CAACgB,IAAX,CAAgBD,CAAhB,CAAP;AACD,GAFmB,CAApB;AAGA,SAAOD,aAAa,CAACZ,KAAK,GAAGY,aAAa,CAACN,MAAvB,CAApB;AACD,CAxBM","sourcesContent":["import { normalizeColor } from '../../utils';\nexport var strokeProps = function strokeProps(color, theme) {\n  var result = {};\n\n  if (color) {\n    if (typeof color === 'object') {\n      result.stroke = normalizeColor(color.color, theme);\n\n      if (color.opacity) {\n        result.strokeOpacity = \"\" + (color.opacity === true ? theme.global.opacity.medium : theme.global.opacity[color.opacity]);\n      }\n    } else {\n      result.stroke = normalizeColor(color, theme);\n    }\n  }\n\n  return result;\n};\nvar neutralExp = /^neutral-\\d+/;\nexport var defaultColor = function defaultColor(index, theme, valuesLength) {\n  if (index === valuesLength - 1 && theme.meter.color) {\n    return theme.meter.color;\n  }\n\n  if (theme.meter && theme.meter.colors) {\n    var _colors = theme.meter.colors[theme.dark ? 'dark' : 'light'] || theme.meter.colors;\n\n    return _colors[index % _colors.length];\n  }\n\n  var colors = Object.keys(theme.global.colors).filter(function (n) {\n    return n.match(/^graph-[0-9]$/);\n  });\n\n  if (colors.length > 0) {\n    return colors[index % colors.length];\n  } // Deprecate using \"neutral-*\" color names. Remove eventually.\n\n\n  var neutralColors = Object.keys(theme.global.colors).filter(function (k) {\n    return neutralExp.test(k);\n  });\n  return neutralColors[index % neutralColors.length];\n};"]},"metadata":{},"sourceType":"module"}