{"ast":null,"code":"var _jsxFileName = \"/Users/Avelina/Projects/senior/cirr-graphs/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryStack } from 'victory';\nconst tech = [{\n  salaryRange: [0, 50000],\n  percentage: 18.6\n}, {\n  salaryRange: [50000, 60000],\n  percentage: 49.2\n}, {\n  salaryRange: [60000, 70000],\n  percentage: 27.1\n}, {\n  salaryRange: [70000, 80000],\n  percentage: 3.4\n}, {\n  salaryRange: [80000, 90000],\n  percentage: 0.0\n}, {\n  salaryRange: [90000, 150000],\n  percentage: 1.7\n}];\nconst grace = [{\n  salaryRange: [0, 60000],\n  percentage: 10.1\n}, {\n  salaryRange: [60000, 70000],\n  percentage: 4.3\n}, {\n  salaryRange: [70000, 80000],\n  percentage: 17.4\n}, {\n  salaryRange: [80000, 90000],\n  percentage: 13.0\n}, {\n  salaryRange: [90000, 100000],\n  percentage: 20.3\n}, {\n  salaryRange: [100000, 150000],\n  percentage: 34.8\n}];\nconst code = [{\n  salaryRange: [0, 100000],\n  percentage: 25.0\n}, {\n  salaryRange: [100000, 110000],\n  percentage: 3.1\n}, {\n  salaryRange: [110000, 120000],\n  percentage: 25.0\n}, {\n  salaryRange: [120000, 130000],\n  percentage: 9.4\n}, {\n  salaryRange: [130000, 140000],\n  percentage: 12.5\n}, {\n  salaryRange: [140000, 150000],\n  percentage: 25.0\n}];\nconst schoolsData = [{\n  name: 'code',\n  school: code,\n  color: '118217'\n}, {\n  name: 'tech',\n  school: tech,\n  color: '0914AA'\n}, {\n  name: 'grace',\n  school: grace,\n  color: 'AA0000'\n}];\n\nconst LightenColor = function (color, percent) {\n  const num = parseInt(color, 16);\n  const amt = Math.round(2.55 * percent);\n  const R = (num >> 16) + amt;\n  const B = (num >> 8 & 0x00ff) + amt;\n  const G = (num & 0x0000ff) + amt;\n  return (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 + (B < 255 ? B < 1 ? 0 : B : 255) * 0x100 + (G < 255 ? G < 1 ? 0 : G : 255)).toString(16).slice(1);\n};\n\nconst pickColor = function (datum, rangeIndex) {\n  let percentage = datum.school[rangeIndex].percentage;\n  const color = datum.color;\n  if (percentage <= 5) percentage = 80;else if (percentage <= 10) percentage = 67;else if (percentage <= 15) percentage = 44;else if (percentage <= 20 && percentage < 25) percentage = 22;else percentage = 1;\n  console.log('rangeIndex', rangeIndex, 'TCL: pickColor -> percentage', percentage);\n  return LightenColor(color, percentage);\n};\n\nclass App extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Victory Tutorial\"), React.createElement(\"div\", {\n      style: {\n        padding: '50px',\n        margin: '50px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(VictoryChart, {\n      theme: VictoryTheme.material,\n      domainPadding: 30,\n      padding: 60,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(VictoryAxis, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(VictoryAxis, {\n      dependentAxis: true,\n      tickValues: [50000, 75000, 100000, 125000, 150000],\n      tickFormat: tick => {\n        return `$${tick}`;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(VictoryStack, {\n      colorScale: \"heatmap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(VictoryBar, {\n      data: schoolsData,\n      x: \"name\",\n      y: datum => datum.school[0].salaryRange[1] - datum.school[0].salaryRange[0],\n      style: {\n        data: {\n          fill: ({\n            datum\n          }) => pickColor(datum, 0)\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(VictoryBar, {\n      data: schoolsData,\n      x: \"name\",\n      y: datum => datum.school[1].salaryRange[1] - datum.school[1].salaryRange[0],\n      style: {\n        data: {\n          fill: ({\n            datum\n          }) => pickColor(datum, 1)\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(VictoryBar, {\n      data: schoolsData,\n      x: \"name\",\n      y: datum => datum.school[2].salaryRange[1] - datum.school[2].salaryRange[0],\n      style: {\n        data: {\n          fill: ({\n            datum\n          }) => pickColor(datum, 2)\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(VictoryBar, {\n      data: schoolsData,\n      x: \"name\",\n      y: datum => datum.school[3].salaryRange[1] - datum.school[3].salaryRange[0],\n      style: {\n        data: {\n          fill: ({\n            datum\n          }) => pickColor(datum, 3)\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }), React.createElement(VictoryBar, {\n      data: schoolsData,\n      x: \"name\",\n      y: datum => datum.school[4].salaryRange[1] - datum.school[4].salaryRange[0],\n      style: {\n        data: {\n          fill: ({\n            datum\n          }) => pickColor(datum, 4)\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(VictoryBar, {\n      data: schoolsData,\n      x: \"name\",\n      y: datum => datum.school[5].salaryRange[1] - datum.school[5].salaryRange[0],\n      style: {\n        data: {\n          fill: ({\n            datum\n          }) => pickColor(datum, 5)\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Avelina/Projects/senior/cirr-graphs/src/App.js"],"names":["React","VictoryBar","VictoryChart","VictoryAxis","VictoryTheme","VictoryStack","tech","salaryRange","percentage","grace","code","schoolsData","name","school","color","LightenColor","percent","num","parseInt","amt","Math","round","R","B","G","toString","slice","pickColor","datum","rangeIndex","console","log","App","Component","render","padding","margin","material","tick","data","fill"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './App.css'\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme, VictoryStack } from 'victory'\n\nconst tech = [\n  { salaryRange: [0, 50000], percentage: 18.6 },\n  { salaryRange: [50000, 60000], percentage: 49.2 },\n  { salaryRange: [60000, 70000], percentage: 27.1 },\n  { salaryRange: [70000, 80000], percentage: 3.4 },\n  { salaryRange: [80000, 90000], percentage: 0.0 },\n  { salaryRange: [90000, 150000], percentage: 1.7 },\n]\n\nconst grace = [\n  { salaryRange: [0, 60000], percentage: 10.1 },\n  { salaryRange: [60000, 70000], percentage: 4.3 },\n  { salaryRange: [70000, 80000], percentage: 17.4 },\n  { salaryRange: [80000, 90000], percentage: 13.0 },\n  { salaryRange: [90000, 100000], percentage: 20.3 },\n  { salaryRange: [100000, 150000], percentage: 34.8 },\n]\n\nconst code = [\n  { salaryRange: [0, 100000], percentage: 25.0 },\n  { salaryRange: [100000, 110000], percentage: 3.1 },\n  { salaryRange: [110000, 120000], percentage: 25.0 },\n  { salaryRange: [120000, 130000], percentage: 9.4 },\n  { salaryRange: [130000, 140000], percentage: 12.5 },\n  { salaryRange: [140000, 150000], percentage: 25.0 },\n]\n\nconst schoolsData = [\n  { name: 'code', school: code, color: '118217' },\n  { name: 'tech', school: tech, color: '0914AA' },\n  { name: 'grace', school: grace, color: 'AA0000' },\n]\n\nconst LightenColor = function(color, percent) {\n  const num = parseInt(color, 16)\n  const amt = Math.round(2.55 * percent)\n  const R = (num >> 16) + amt\n  const B = ((num >> 8) & 0x00ff) + amt\n  const G = (num & 0x0000ff) + amt\n\n  return (\n    0x1000000 +\n    (R < 255 ? (R < 1 ? 0 : R) : 255) * 0x10000 +\n    (B < 255 ? (B < 1 ? 0 : B) : 255) * 0x100 +\n    (G < 255 ? (G < 1 ? 0 : G) : 255)\n  )\n    .toString(16)\n    .slice(1)\n}\n\nconst pickColor = function(datum, rangeIndex) {\n  let percentage = datum.school[rangeIndex].percentage\n\n  const color = datum.color\n  if (percentage <= 5) percentage = 80\n  else if (percentage <= 10) percentage = 67\n  else if (percentage <= 15) percentage = 44\n  else if (percentage <= 20 && percentage < 25) percentage = 22\n  else percentage = 1\n\n  console.log('rangeIndex', rangeIndex, 'TCL: pickColor -> percentage', percentage)\n  return LightenColor(color, percentage)\n}\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Victory Tutorial</h1>\n        <div style={{ padding: '50px', margin: '50px' }}>\n          <VictoryChart theme={VictoryTheme.material} domainPadding={30} padding={60}>\n            <VictoryAxis />\n            <VictoryAxis\n              dependentAxis\n              tickValues={[50000, 75000, 100000, 125000, 150000]}\n              tickFormat={(tick) => {\n                return `$${tick}`\n              }}\n            />\n\n            <VictoryStack colorScale=\"heatmap\">\n              <VictoryBar\n                data={schoolsData}\n                x=\"name\"\n                y={(datum) => datum.school[0].salaryRange[1] - datum.school[0].salaryRange[0]}\n                style={{\n                  data: {\n                    fill: ({ datum }) => pickColor(datum, 0),\n                  },\n                }}\n              />\n              <VictoryBar\n                data={schoolsData}\n                x=\"name\"\n                y={(datum) => datum.school[1].salaryRange[1] - datum.school[1].salaryRange[0]}\n                style={{\n                  data: {\n                    fill: ({ datum }) => pickColor(datum, 1),\n                  },\n                }}\n              />\n              <VictoryBar\n                data={schoolsData}\n                x=\"name\"\n                y={(datum) => datum.school[2].salaryRange[1] - datum.school[2].salaryRange[0]}\n                style={{\n                  data: {\n                    fill: ({ datum }) => pickColor(datum, 2),\n                  },\n                }}\n              />\n              <VictoryBar\n                data={schoolsData}\n                x=\"name\"\n                y={(datum) => datum.school[3].salaryRange[1] - datum.school[3].salaryRange[0]}\n                style={{\n                  data: {\n                    fill: ({ datum }) => pickColor(datum, 3),\n                  },\n                }}\n              />\n              <VictoryBar\n                data={schoolsData}\n                x=\"name\"\n                y={(datum) => datum.school[4].salaryRange[1] - datum.school[4].salaryRange[0]}\n                style={{\n                  data: {\n                    fill: ({ datum }) => pickColor(datum, 4),\n                  },\n                }}\n              />\n              <VictoryBar\n                data={schoolsData}\n                x=\"name\"\n                y={(datum) => datum.school[5].salaryRange[1] - datum.school[5].salaryRange[0]}\n                style={{\n                  data: {\n                    fill: ({ datum }) => pickColor(datum, 5),\n                  },\n                }}\n              />\n            </VictoryStack>\n          </VictoryChart>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}