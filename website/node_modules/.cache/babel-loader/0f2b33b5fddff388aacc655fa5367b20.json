{"ast":null,"code":"import { describe, PropTypes } from 'react-desc';\nimport { getAvailableAtBadge } from '../../utils';\nexport var doc = function doc(RadioButtonGroup) {\n  var DocumentedRadioButtonGroup = describe(RadioButtonGroup).availableAt(getAvailableAtBadge('RadioButtonGroup')).description('A group of radio buttons.').usage(\"import { RadioButtonGroup } from 'grommet';\\n<RadioButtonGroup />\").intrinsicElement('div');\n  DocumentedRadioButtonGroup.propTypes = {\n    children: PropTypes.func.description(\"Function that will be called to render the visual representation.\\n      It will be passed an object indicating whether the button is checked. It\\n      should return a react element.\\n      For example:\\n      `children={(option, { checked }) => <Box ...>{...}</Box>}`\\n      \"),\n    name: PropTypes.string.description(\"The DOM name attribute value to use for the underlying <input/> \\n      elements.\").isRequired,\n    onChange: PropTypes.func.description(\"Function that will be called when the user clicks on of the radio\\n      buttons. It will be passed a React event object.\"),\n    options: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.arrayOf(PropTypes.shape({\n      disabled: PropTypes.bool,\n      id: PropTypes.string,\n      label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n      value: PropTypes.string.isRequired\n    }))]).description(\"Options can be either a string or an object.\").isRequired,\n    value: PropTypes.string.description(\"Currently selected option value.\")\n  };\n  return DocumentedRadioButtonGroup;\n};","map":{"version":3,"sources":["/Users/Avelina/Projects/senior/cirr-graphs/node_modules/grommet/es6/components/RadioButtonGroup/doc.js"],"names":["describe","PropTypes","getAvailableAtBadge","doc","RadioButtonGroup","DocumentedRadioButtonGroup","availableAt","description","usage","intrinsicElement","propTypes","children","func","name","string","isRequired","onChange","options","oneOfType","arrayOf","shape","disabled","bool","id","label","element","value"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,YAApC;AACA,SAASC,mBAAT,QAAoC,aAApC;AACA,OAAO,IAAIC,GAAG,GAAG,SAASA,GAAT,CAAaC,gBAAb,EAA+B;AAC9C,MAAIC,0BAA0B,GAAGL,QAAQ,CAACI,gBAAD,CAAR,CAA2BE,WAA3B,CAAuCJ,mBAAmB,CAAC,kBAAD,CAA1D,EAAgFK,WAAhF,CAA4F,2BAA5F,EAAyHC,KAAzH,CAA+H,mEAA/H,EAAoMC,gBAApM,CAAqN,KAArN,CAAjC;AACAJ,EAAAA,0BAA0B,CAACK,SAA3B,GAAuC;AACrCC,IAAAA,QAAQ,EAAEV,SAAS,CAACW,IAAV,CAAeL,WAAf,CAA2B,uRAA3B,CAD2B;AAErCM,IAAAA,IAAI,EAAEZ,SAAS,CAACa,MAAV,CAAiBP,WAAjB,CAA6B,mFAA7B,EAAkHQ,UAFnF;AAGrCC,IAAAA,QAAQ,EAAEf,SAAS,CAACW,IAAV,CAAeL,WAAf,CAA2B,2HAA3B,CAH2B;AAIrCU,IAAAA,OAAO,EAAEhB,SAAS,CAACiB,SAAV,CAAoB,CAACjB,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACa,MAA5B,CAAD,EAAsCb,SAAS,CAACkB,OAAV,CAAkBlB,SAAS,CAACmB,KAAV,CAAgB;AACnGC,MAAAA,QAAQ,EAAEpB,SAAS,CAACqB,IAD+E;AAEnGC,MAAAA,EAAE,EAAEtB,SAAS,CAACa,MAFqF;AAGnGU,MAAAA,KAAK,EAAEvB,SAAS,CAACiB,SAAV,CAAoB,CAACjB,SAAS,CAACa,MAAX,EAAmBb,SAAS,CAACwB,OAA7B,CAApB,CAH4F;AAInGC,MAAAA,KAAK,EAAEzB,SAAS,CAACa,MAAV,CAAiBC;AAJ2E,KAAhB,CAAlB,CAAtC,CAApB,EAKHR,WALG,CAKS,8CALT,EAKyDQ,UAT7B;AAUrCW,IAAAA,KAAK,EAAEzB,SAAS,CAACa,MAAV,CAAiBP,WAAjB,CAA6B,kCAA7B;AAV8B,GAAvC;AAYA,SAAOF,0BAAP;AACD,CAfM","sourcesContent":["import { describe, PropTypes } from 'react-desc';\nimport { getAvailableAtBadge } from '../../utils';\nexport var doc = function doc(RadioButtonGroup) {\n  var DocumentedRadioButtonGroup = describe(RadioButtonGroup).availableAt(getAvailableAtBadge('RadioButtonGroup')).description('A group of radio buttons.').usage(\"import { RadioButtonGroup } from 'grommet';\\n<RadioButtonGroup />\").intrinsicElement('div');\n  DocumentedRadioButtonGroup.propTypes = {\n    children: PropTypes.func.description(\"Function that will be called to render the visual representation.\\n      It will be passed an object indicating whether the button is checked. It\\n      should return a react element.\\n      For example:\\n      `children={(option, { checked }) => <Box ...>{...}</Box>}`\\n      \"),\n    name: PropTypes.string.description(\"The DOM name attribute value to use for the underlying <input/> \\n      elements.\").isRequired,\n    onChange: PropTypes.func.description(\"Function that will be called when the user clicks on of the radio\\n      buttons. It will be passed a React event object.\"),\n    options: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.arrayOf(PropTypes.shape({\n      disabled: PropTypes.bool,\n      id: PropTypes.string,\n      label: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n      value: PropTypes.string.isRequired\n    }))]).description(\"Options can be either a string or an object.\").isRequired,\n    value: PropTypes.string.description(\"Currently selected option value.\")\n  };\n  return DocumentedRadioButtonGroup;\n};"]},"metadata":{},"sourceType":"module"}