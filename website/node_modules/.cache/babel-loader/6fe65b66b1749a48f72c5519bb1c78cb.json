{"ast":null,"code":"import { PropTypes } from 'react-desc';\nexport var a11yTitlePropType = PropTypes.string.description(\"Custom label to be used by screen readers. When provided, an aria-label will\\n   be added to the element.\");\nexport var backgroundPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n  color: PropTypes.string,\n  opacity: PropTypes.oneOfType([PropTypes.oneOf(['weak', 'medium', 'strong']), PropTypes.bool])\n})]).description('Background color');\nexport var colorPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n  dark: PropTypes.string,\n  light: PropTypes.string\n})]);\nvar MARGIN_SIZES = ['xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge'];\nexport var marginProp = PropTypes.oneOfType([PropTypes.oneOf(['none'].concat(MARGIN_SIZES)), PropTypes.shape({\n  bottom: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  horizontal: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  left: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  right: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  top: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  vertical: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string])\n}), PropTypes.string]).description(\"The amount of margin around the component. An object can\\n    be specified to distinguish horizontal margin, vertical margin, and\\n    margin on a particular side.\");\nexport var genericProps = {\n  a11yTitle: a11yTitlePropType,\n  alignSelf: PropTypes.oneOf(['start', 'center', 'end', 'stretch']).description(\"How to align along the cross axis when contained in\\n      a Box or along the column axis when contained in a Grid.\"),\n  gridArea: PropTypes.string.description(\"The name of the area to place\\n    this inside a parent Grid.\"),\n  margin: marginProp\n};\nexport var hoverIndicatorPropType = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.oneOf(['background']), PropTypes.shape({\n  color: PropTypes.string,\n  dark: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  image: PropTypes.string,\n  light: PropTypes.string,\n  position: PropTypes.string,\n  opacity: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number, PropTypes.oneOf(['weak', 'medium', 'strong'])]),\n  repeat: PropTypes.oneOfType([PropTypes.oneOf(['no-repeat', 'repeat']), PropTypes.string]),\n  size: PropTypes.oneOfType([PropTypes.oneOf(['cover', 'contain']), PropTypes.string])\n})]);","map":{"version":3,"sources":["/Users/Avelina/Projects/senior/cirr-graphs/node_modules/grommet/es6/utils/prop-types.js"],"names":["PropTypes","a11yTitlePropType","string","description","backgroundPropType","oneOfType","shape","color","opacity","oneOf","bool","colorPropType","dark","light","MARGIN_SIZES","marginProp","concat","bottom","horizontal","left","right","top","vertical","genericProps","a11yTitle","alignSelf","gridArea","margin","hoverIndicatorPropType","image","position","number","repeat","size"],"mappings":"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","sourcesContent":["import { PropTypes } from 'react-desc';\nexport var a11yTitlePropType = PropTypes.string.description(\"Custom label to be used by screen readers. When provided, an aria-label will\\n   be added to the element.\");\nexport var backgroundPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n  color: PropTypes.string,\n  opacity: PropTypes.oneOfType([PropTypes.oneOf(['weak', 'medium', 'strong']), PropTypes.bool])\n})]).description('Background color');\nexport var colorPropType = PropTypes.oneOfType([PropTypes.string, PropTypes.shape({\n  dark: PropTypes.string,\n  light: PropTypes.string\n})]);\nvar MARGIN_SIZES = ['xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge'];\nexport var marginProp = PropTypes.oneOfType([PropTypes.oneOf(['none'].concat(MARGIN_SIZES)), PropTypes.shape({\n  bottom: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  horizontal: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  left: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  right: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  top: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string]),\n  vertical: PropTypes.oneOfType([PropTypes.oneOf(MARGIN_SIZES), PropTypes.string])\n}), PropTypes.string]).description(\"The amount of margin around the component. An object can\\n    be specified to distinguish horizontal margin, vertical margin, and\\n    margin on a particular side.\");\nexport var genericProps = {\n  a11yTitle: a11yTitlePropType,\n  alignSelf: PropTypes.oneOf(['start', 'center', 'end', 'stretch']).description(\"How to align along the cross axis when contained in\\n      a Box or along the column axis when contained in a Grid.\"),\n  gridArea: PropTypes.string.description(\"The name of the area to place\\n    this inside a parent Grid.\"),\n  margin: marginProp\n};\nexport var hoverIndicatorPropType = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.oneOf(['background']), PropTypes.shape({\n  color: PropTypes.string,\n  dark: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  image: PropTypes.string,\n  light: PropTypes.string,\n  position: PropTypes.string,\n  opacity: PropTypes.oneOfType([PropTypes.string, PropTypes.bool, PropTypes.number, PropTypes.oneOf(['weak', 'medium', 'strong'])]),\n  repeat: PropTypes.oneOfType([PropTypes.oneOf(['no-repeat', 'repeat']), PropTypes.string]),\n  size: PropTypes.oneOfType([PropTypes.oneOf(['cover', 'contain']), PropTypes.string])\n})]);"]},"metadata":{},"sourceType":"module"}