{"ast":null,"code":"var _jsxFileName = \"/Users/Avelina/Projects/senior/d3-app/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport * as d3 from 'd3';\nconst data = [{\n  time: 'At open',\n  items: 24\n}, {\n  time: '11:00 PM',\n  items: 0\n}, {\n  time: '12:00 PM',\n  items: 4\n}];\n\nclass App extends React.Component {\n  drawLineChart(data) {\n    const svgWidth = 800;\n    const svgHeight = 400;\n    const svg = d3.select('svg').attr('width', svgWidth).attr('height', svgHeight);\n    const margin = {\n      top: 20,\n      right: 20,\n      bottom: 30,\n      left: 50\n    };\n    const g = svg.append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')'); // Create x and y scale\n\n    const width = svgWidth - margin.left - margin.right;\n    const height = svgHeight - margin.top - margin.bottom;\n    const y = d3.scaleLinear().domain(d3.extent(data, d => d.items)).range([height, 0]);\n    const x = d3.scalePoint().domain(data.map(d => d.time)).range([0, width]); // Create line\n\n    const itemsLine = d3.line().x(d => x(d.time)).y(d => y(d.items)); // Append x and y axes to the group g\n\n    g.append('g').attr('transform', 'translate(0,' + height + ')').call(d3.axisBottom(x)).selectAll('text').style('text-anchor', 'end').attr('dx', '-.8em').attr('dy', '.15em').attr('transform', 'rotate(-50)');\n    g.append('g').call(d3.axisLeft(y)).append('text').attr('fill', '#000').attr('y', -40).attr('x', -180).attr('text-anchor', 'end').text('Items (count)'); // Append the line as a path to group\n\n    g.append('path').datum(data).attr('fill', 'none').attr('stroke', 'red').attr('stroke-linejoin', 'round').attr('stroke-linecap', 'round').attr('stroke-width', 1.5).attr('d', itemsLine); // Append legend group to svg\n\n    const legend = svg.append('g').attr('class', 'legend').attr('x', width - 65).attr('y', 25).attr('height', 100).attr('width', 100);\n    legend.append('rect').attr('x', width - 65).attr('y', 25).attr('width', 10).attr('height', 10).attr('fill', 'red');\n    legend.append('text').attr('x', width - 50).attr('y', 35).text('Items');\n  }\n\n  componentDidMount() {\n    this.drawLineChart(data);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      id: \"lineChart\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }), React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Edit \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"src/App.js\"), \" and save to reload.\"), React.createElement(\"a\", {\n      className: \"App-link\",\n      href: \"https://reactjs.org\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Learn React\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Avelina/Projects/senior/d3-app/src/App.js"],"names":["React","d3","data","time","items","App","Component","drawLineChart","svgWidth","svgHeight","svg","select","attr","margin","top","right","bottom","left","g","append","width","height","y","scaleLinear","domain","extent","d","range","x","scalePoint","map","itemsLine","line","call","axisBottom","selectAll","style","axisLeft","text","datum","legend","componentDidMount","render","logo"],"mappings":"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","sourcesContent":["import React from 'react'\nimport logo from './logo.svg'\nimport './App.css'\nimport * as d3 from 'd3'\n\nconst data = [\n  { time: 'At open', items: 24 },\n  { time: '11:00 PM', items: 0 },\n  { time: '12:00 PM', items: 4 },\n]\n\nclass App extends React.Component {\n  drawLineChart(data) {\n    const svgWidth = 800\n    const svgHeight = 400\n\n    const svg = d3\n      .select('svg')\n      .attr('width', svgWidth)\n      .attr('height', svgHeight)\n\n    const margin = { top: 20, right: 20, bottom: 30, left: 50 }\n    const g = svg.append('g').attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\n    // Create x and y scale\n    const width = svgWidth - margin.left - margin.right\n    const height = svgHeight - margin.top - margin.bottom\n\n    const y = d3\n      .scaleLinear()\n      .domain(d3.extent(data, (d) => d.items))\n      .range([height, 0])\n\n    const x = d3\n      .scalePoint()\n      .domain(data.map((d) => d.time))\n      .range([0, width])\n\n    // Create line\n    const itemsLine = d3\n      .line()\n      .x((d) => x(d.time))\n      .y((d) => y(d.items))\n\n    // Append x and y axes to the group g\n    g.append('g')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(d3.axisBottom(x))\n      .selectAll('text')\n      .style('text-anchor', 'end')\n      .attr('dx', '-.8em')\n      .attr('dy', '.15em')\n      .attr('transform', 'rotate(-50)')\n\n    g.append('g')\n      .call(d3.axisLeft(y))\n      .append('text')\n      .attr('fill', '#000')\n      .attr('y', -40)\n      .attr('x', -180)\n      .attr('text-anchor', 'end')\n      .text('Items (count)')\n\n    // Append the line as a path to group\n    g.append('path')\n      .datum(data)\n      .attr('fill', 'none')\n      .attr('stroke', 'red')\n      .attr('stroke-linejoin', 'round')\n      .attr('stroke-linecap', 'round')\n      .attr('stroke-width', 1.5)\n      .attr('d', itemsLine)\n\n    // Append legend group to svg\n    const legend = svg\n      .append('g')\n      .attr('class', 'legend')\n      .attr('x', width - 65)\n      .attr('y', 25)\n      .attr('height', 100)\n      .attr('width', 100)\n\n    legend\n      .append('rect')\n      .attr('x', width - 65)\n      .attr('y', 25)\n      .attr('width', 10)\n      .attr('height', 10)\n      .attr('fill', 'red')\n\n    legend\n      .append('text')\n      .attr('x', width - 50)\n      .attr('y', 35)\n      .text('Items')\n  }\n  componentDidMount() {\n    this.drawLineChart(data)\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <svg id=\"lineChart\"></svg>\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Learn React\n          </a>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}