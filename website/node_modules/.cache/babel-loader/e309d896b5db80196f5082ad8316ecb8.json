{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { describe, PropTypes } from 'react-desc';\nimport { colorPropType, genericProps, getAvailableAtBadge, hoverIndicatorPropType, themeDocUtils } from '../../utils';\nexport var doc = function doc(Button) {\n  var DocumentedButton = describe(Button).availableAt(getAvailableAtBadge('Button')).description('A button.').details(\"You can provide a single function child that will be called with\\n      'hover' and 'focus' keys. This allows you to customize the rendering\\n      of the Button in those cases.\").usage(\"import { Button } from 'grommet';\\n<Button primary label='Label' />\").intrinsicElement('button');\n  DocumentedButton.propTypes = _extends({}, genericProps, {\n    active: PropTypes.bool.description('Whether the button is active.').defaultValue(false),\n    color: colorPropType.description('Fill color for primary, label color for plain, border color otherwise.'),\n    disabled: PropTypes.bool.description('Whether the button is disabled.').defaultValue(false),\n    fill: PropTypes.oneOfType([PropTypes.oneOf(['horizontal', 'vertical']), PropTypes.bool]).description(\"Whether the button expands to fill all of the available width and/or \\n        height.\").defaultValue(false),\n    focusIndicator: PropTypes.bool.description(\"Whether when 'plain' it should receive a focus outline.\").defaultValue(true),\n    hoverIndicator: hoverIndicatorPropType.description(\"The hover indicator to apply when the user is mousing over the\\nbutton. An object can be also be specified for color index support:\\n{background: 'neutral-2'}. This prop is meant to be used only\\nwith plain Buttons.\").defaultValue(false),\n    href: PropTypes.string.description('If specified, the button will behave like an anchor tag.'),\n    target: PropTypes.oneOf(['_self', '_blank', '_parent', '_top']).description(\"Specifies where to display the URL defined in the href property.\"),\n    icon: PropTypes.element.description('Icon element to place in the button.'),\n    gap: PropTypes.oneOfType([PropTypes.oneOf(['none', 'xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge']), PropTypes.string]).description(\"The amount of spacing between icon and label in the button.\").defaultValue('small'),\n    label: PropTypes.node.description('Label text to place in the button.'),\n    onClick: PropTypes.func.description(\"Click handler. Not setting this property and not specifying a href\\ncauses the Button to be disabled.\"),\n    plain: PropTypes.bool.description(\"Whether this is a plain button with no border or pad.\\nNon plain button will show both pad and border.\\nThe plain button has no border and unless the icon prop exist it has no pad as \\nwell.\").defaultValue(false),\n    primary: PropTypes.bool.description(\"Whether this is a primary button. There should be at most one per page\\n         or screen.\").defaultValue(false),\n    reverse: PropTypes.bool.description(\"Whether an icon and label should be reversed so that the icon is at the\\nend of the anchor.\").defaultValue(false),\n    type: PropTypes.oneOf(['button', 'reset', 'submit']).description(\"The type of button. Set the type to submit for the default button on \\n        forms.\").defaultValue('button'),\n    as: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).description(\"The DOM tag or react component to use for the element.\")\n  });\n  return DocumentedButton;\n};\nexport var themeDoc = _extends({\n  'global.active.background.color': {\n    description: 'The background color when using active prop.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: 'active'\n  },\n  'global.active.background.opacity': {\n    description: 'The value used for active button background opacity.',\n    type: 'number | string',\n    defaultValue: 'medium'\n  },\n  'global.active.color': {\n    description: 'The text color when using active prop.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: \"{ dark: 'white', light: 'black' }\"\n  },\n  'global.hover.background': {\n    description: 'The background style when hovering.',\n    type: 'string | { color: string, opacity: string }',\n    defaultValue: \"{ color: 'active', opacity: 'medium' }\"\n  },\n  'global.hover.color': {\n    description: 'The text color when hovering.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: \"{ dark: 'white', light: 'black' }\"\n  },\n  'global.edgeSize.small': {\n    description: 'The padding around an icon-only button.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: '12px'\n  },\n  'global.colors.control': {\n    description: 'The color of the border.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: \"{ dark: 'accent-1', light: 'brand', }\"\n  },\n  'global.colors.brand': {\n    description: 'The light version of the border.',\n    type: 'string',\n    defaultValue: '#7D4CDB'\n  },\n  'global.colors.text': {\n    description: 'The color of the text label.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: \"{ dark: '#f8f8f8', light: '#444444' }\"\n  },\n  'text.medium.size': {\n    description: 'The font size of the text label.',\n    type: 'string',\n    defaultValue: '18px'\n  },\n  'text.medium.height': {\n    description: 'The line height of the text label.',\n    type: 'string',\n    defaultValue: '24px'\n  },\n  'button.border.color': {\n    description: \"The color of the border.\",\n    type: 'string | { dark: string, light: string }'\n  },\n  'button.border.radius': {\n    description: 'The corner radius.',\n    type: 'string',\n    defaultValue: '18px'\n  },\n  'button.border.width': {\n    description: 'The border width.',\n    type: 'string',\n    defaultValue: '2px'\n  },\n  'button.color': {\n    description: \"The color of the text label.\",\n    type: 'string | { dark: string, light: string }'\n  },\n  'button.primary.color': {\n    description: \"The color of the background for primary buttons.\",\n    type: 'string | { dark: string, light: string }'\n  },\n  'button.disabled.opacity': {\n    description: 'The opacity when the button is disabled.',\n    type: 'number',\n    defaultValue: 0.3\n  },\n  'button.padding.horizontal': {\n    description: 'The horizontal padding.',\n    type: 'string',\n    defaultValue: '22px'\n  },\n  'button.padding.vertical': {\n    description: 'The vertical padding.',\n    type: 'string',\n    defaultValue: '4px'\n  },\n  'button.extend': {\n    description: 'Any additional style for the Button.',\n    type: 'string | (props) => {}'\n  }\n}, themeDocUtils.focusStyle, {}, themeDocUtils.disabledStyle);","map":{"version":3,"sources":["/Users/Avelina/Projects/senior/cirr-graphs/node_modules/grommet/es6/components/Button/doc.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","describe","PropTypes","colorPropType","genericProps","getAvailableAtBadge","hoverIndicatorPropType","themeDocUtils","doc","Button","DocumentedButton","availableAt","description","details","usage","intrinsicElement","propTypes","active","bool","defaultValue","color","disabled","fill","oneOfType","oneOf","focusIndicator","hoverIndicator","href","string","icon","element","gap","label","node","onClick","func","plain","primary","reverse","type","as","themeDoc","focusStyle","disabledStyle"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport { describe, PropTypes } from 'react-desc';\nimport { colorPropType, genericProps, getAvailableAtBadge, hoverIndicatorPropType, themeDocUtils } from '../../utils';\nexport var doc = function doc(Button) {\n  var DocumentedButton = describe(Button).availableAt(getAvailableAtBadge('Button')).description('A button.').details(\"You can provide a single function child that will be called with\\n      'hover' and 'focus' keys. This allows you to customize the rendering\\n      of the Button in those cases.\").usage(\"import { Button } from 'grommet';\\n<Button primary label='Label' />\").intrinsicElement('button');\n  DocumentedButton.propTypes = _extends({}, genericProps, {\n    active: PropTypes.bool.description('Whether the button is active.').defaultValue(false),\n    color: colorPropType.description('Fill color for primary, label color for plain, border color otherwise.'),\n    disabled: PropTypes.bool.description('Whether the button is disabled.').defaultValue(false),\n    fill: PropTypes.oneOfType([PropTypes.oneOf(['horizontal', 'vertical']), PropTypes.bool]).description(\"Whether the button expands to fill all of the available width and/or \\n        height.\").defaultValue(false),\n    focusIndicator: PropTypes.bool.description(\"Whether when 'plain' it should receive a focus outline.\").defaultValue(true),\n    hoverIndicator: hoverIndicatorPropType.description(\"The hover indicator to apply when the user is mousing over the\\nbutton. An object can be also be specified for color index support:\\n{background: 'neutral-2'}. This prop is meant to be used only\\nwith plain Buttons.\").defaultValue(false),\n    href: PropTypes.string.description('If specified, the button will behave like an anchor tag.'),\n    target: PropTypes.oneOf(['_self', '_blank', '_parent', '_top']).description(\"Specifies where to display the URL defined in the href property.\"),\n    icon: PropTypes.element.description('Icon element to place in the button.'),\n    gap: PropTypes.oneOfType([PropTypes.oneOf(['none', 'xxsmall', 'xsmall', 'small', 'medium', 'large', 'xlarge']), PropTypes.string]).description(\"The amount of spacing between icon and label in the button.\").defaultValue('small'),\n    label: PropTypes.node.description('Label text to place in the button.'),\n    onClick: PropTypes.func.description(\"Click handler. Not setting this property and not specifying a href\\ncauses the Button to be disabled.\"),\n    plain: PropTypes.bool.description(\"Whether this is a plain button with no border or pad.\\nNon plain button will show both pad and border.\\nThe plain button has no border and unless the icon prop exist it has no pad as \\nwell.\").defaultValue(false),\n    primary: PropTypes.bool.description(\"Whether this is a primary button. There should be at most one per page\\n         or screen.\").defaultValue(false),\n    reverse: PropTypes.bool.description(\"Whether an icon and label should be reversed so that the icon is at the\\nend of the anchor.\").defaultValue(false),\n    type: PropTypes.oneOf(['button', 'reset', 'submit']).description(\"The type of button. Set the type to submit for the default button on \\n        forms.\").defaultValue('button'),\n    as: PropTypes.oneOfType([PropTypes.string, PropTypes.func]).description(\"The DOM tag or react component to use for the element.\")\n  });\n  return DocumentedButton;\n};\nexport var themeDoc = _extends({\n  'global.active.background.color': {\n    description: 'The background color when using active prop.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: 'active'\n  },\n  'global.active.background.opacity': {\n    description: 'The value used for active button background opacity.',\n    type: 'number | string',\n    defaultValue: 'medium'\n  },\n  'global.active.color': {\n    description: 'The text color when using active prop.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: \"{ dark: 'white', light: 'black' }\"\n  },\n  'global.hover.background': {\n    description: 'The background style when hovering.',\n    type: 'string | { color: string, opacity: string }',\n    defaultValue: \"{ color: 'active', opacity: 'medium' }\"\n  },\n  'global.hover.color': {\n    description: 'The text color when hovering.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: \"{ dark: 'white', light: 'black' }\"\n  },\n  'global.edgeSize.small': {\n    description: 'The padding around an icon-only button.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: '12px'\n  },\n  'global.colors.control': {\n    description: 'The color of the border.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: \"{ dark: 'accent-1', light: 'brand', }\"\n  },\n  'global.colors.brand': {\n    description: 'The light version of the border.',\n    type: 'string',\n    defaultValue: '#7D4CDB'\n  },\n  'global.colors.text': {\n    description: 'The color of the text label.',\n    type: 'string | { dark: string, light: string }',\n    defaultValue: \"{ dark: '#f8f8f8', light: '#444444' }\"\n  },\n  'text.medium.size': {\n    description: 'The font size of the text label.',\n    type: 'string',\n    defaultValue: '18px'\n  },\n  'text.medium.height': {\n    description: 'The line height of the text label.',\n    type: 'string',\n    defaultValue: '24px'\n  },\n  'button.border.color': {\n    description: \"The color of the border.\",\n    type: 'string | { dark: string, light: string }'\n  },\n  'button.border.radius': {\n    description: 'The corner radius.',\n    type: 'string',\n    defaultValue: '18px'\n  },\n  'button.border.width': {\n    description: 'The border width.',\n    type: 'string',\n    defaultValue: '2px'\n  },\n  'button.color': {\n    description: \"The color of the text label.\",\n    type: 'string | { dark: string, light: string }'\n  },\n  'button.primary.color': {\n    description: \"The color of the background for primary buttons.\",\n    type: 'string | { dark: string, light: string }'\n  },\n  'button.disabled.opacity': {\n    description: 'The opacity when the button is disabled.',\n    type: 'number',\n    defaultValue: 0.3\n  },\n  'button.padding.horizontal': {\n    description: 'The horizontal padding.',\n    type: 'string',\n    defaultValue: '22px'\n  },\n  'button.padding.vertical': {\n    description: 'The vertical padding.',\n    type: 'string',\n    defaultValue: '4px'\n  },\n  'button.extend': {\n    description: 'Any additional style for the Button.',\n    type: 'string | (props) => {}'\n  }\n}, themeDocUtils.focusStyle, {}, themeDocUtils.disabledStyle);"]},"metadata":{},"sourceType":"module"}